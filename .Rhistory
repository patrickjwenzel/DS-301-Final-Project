police = read.csv("~/Classwork/D S 301/DS-301-Final-Project/police_killings.csv", header=TRUE)
library(tidyr)
library(leaps)
police = police[!police$name == "Unknown",]
set.seed(7)
train = sample(1:nrow(police),nrow(police)/2, replace=FALSE)
test = (-train)
police$age = as.numeric(police$age)
meanAge = mean(police$age, na.rm = TRUE)
police$age = replace_na(police$age, meanAge)
police$pov = as.numeric(police$pov)
meanPov = mean(police$pov, na.rm = TRUE)
police$pov = replace_na(police$pov, meanPov)
police$college = scale(police$college)[1,]
police$urate = scale(police$urate)[1,]
police$white = as.numeric(police$raceethnicity == "White")
glm.fit = glm(white~age+gender+armed, data=police,subset=train,family='binomial')
glm.prob = predict(glm.fit,police[test,],type='response')
glm.pred = rep(0,length(test))
glm.pred[glm.prob >0.5] = 1
table(glm.pred,police[test,]$white)
1-mean(glm.pred == police[test,]$white)
glm.fit = glm(white~college+urate+pov, data=police,subset=train,family='binomial')
glm.prob = predict(glm.fit,police[test,],type='response')
glm.pred = rep(0,length(test))
glm.pred[glm.prob >0.5] = 1
table(glm.pred,police[test,]$white)
1-mean(glm.pred == police[test,]$white)
regfit = regsubsets(white~age+gender+armed+college+urate+pov, data=police, nvmax=6)
n = dim(police)[1]
regfit.sum = summary(regfit)
p = rowSums(regfit.sum$which) #number of predictors in the model
adjr2 = regfit.sum$adjr2
cp = regfit.sum$cp
rss = regfit.sum$rss
AIC = n*log(rss/n) + 2*(p)
BIC = n*log(rss/n) + (p)*log(n)
barplot(AIC)
barplot(BIC)
plot(adjr2)
plot(cp)
barplot(BIC)
plot(adjr2)
plot(cp)
barplot(AIC)
barplot(BIC)
plot(adjr2)
plot(cp)
coef(regfit, 4)
barplot(AIC)
barplot(BIC)
plot(adjr2)
plot(cp)
glm.fit = glm(white~armedFirearm+age+armedOther+urate, data=police,subset=train,family='binomial')
glm.fit = glm(white~armed+urate+age, data=police,subset=train,family='binomial')
glm.prob = predict(glm.fit,police[test,],type='response')
glm.pred = rep(0,length(test))
glm.pred[glm.prob >0.5] = 1
table(glm.pred,police[test,]$white)
1-mean(glm.pred == police[test,]$white)
glm.fit = glm(white~age+gender+armed, data=police,subset=train,family='binomial')
glm.prob = predict(glm.fit,police[test,],type='response')
glm.pred = rep(0,length(test))
glm.pred[glm.prob >0.5] = 1
table(glm.pred,police[test,]$white)
1-mean(glm.pred == police[test,]$white)
mean(glm.pred == police[test,]$white)
table(glm.pred,police[test,]$white)
glm.fit = glm(white~college*urate*pov, data=police,subset=train,family='binomial')
glm.prob = predict(glm.fit,police[test,],type='response')
glm.pred = rep(0,length(test))
glm.pred[glm.prob >0.5] = 1
table(glm.pred,police[test,]$white)
1-mean(glm.pred == police[test,]$white)
mean(glm.pred == police[test,]$white)
table(glm.pred,police[test,]$white)
AIC = n*log(rss/n) + 2*(p)
BIC = n*log(rss/n) + (p)*log(n)
barplot(AIC)
barplot(BIC)
plot(adjr2)
plot(cp)
glm.fit = glm(white~armed+urate+age, data=police,subset=train,family='binomial')
glm.prob = predict(glm.fit,police[test,],type='response')
glm.pred = rep(0,length(test))
glm.pred[glm.prob >0.5] = 1
table(glm.pred,police[test,]$white)
1-mean(glm.pred == police[test,]$white)
mean(glm.pred == police[test,]$white)
set.seed(11)
train = sample(1:nrow(police),nrow(police)/2, replace=FALSE)
test = (-train)
police$age = as.numeric(police$age)
meanAge = mean(police$age, na.rm = TRUE)
police$age = replace_na(police$age, meanAge)
police$pov = as.numeric(police$pov)
meanPov = mean(police$pov, na.rm = TRUE)
police$pov = replace_na(police$pov, meanPov)
police$college = scale(police$college)[1,]
police$urate = scale(police$urate)[1,]
police$white = as.numeric(police$raceethnicity == "White")
glm.fit = glm(white~age+gender+armed, data=police,subset=train,family='binomial')
glm.prob = predict(glm.fit,police[test,],type='response')
glm.pred = rep(0,length(test))
glm.pred[glm.prob >0.5] = 1
table(glm.pred,police[test,]$white)
mean(glm.pred == police[test,]$white)
glm.fit = glm(white~college*urate*pov, data=police,subset=train,family='binomial')
glm.prob = predict(glm.fit,police[test,],type='response')
glm.pred = rep(0,length(test))
glm.pred[glm.prob >0.5] = 1
table(glm.pred,police[test,]$white)
mean(glm.pred == police[test,]$white)
regfit = regsubsets(white~age+gender+armed+college+urate+pov, data=police, nvmax=6)
n = dim(police)[1]
regfit.sum = summary(regfit)
p = rowSums(regfit.sum$which) #number of predictors in the model
adjr2 = regfit.sum$adjr2
cp = regfit.sum$cp
rss = regfit.sum$rss
AIC = n*log(rss/n) + 2*(p)
BIC = n*log(rss/n) + (p)*log(n)
barplot(AIC)
barplot(BIC)
plot(adjr2)
plot(cp)
coef(regfit, 4)
glm.fit = glm(white~armed+urate+age, data=police,subset=train,family='binomial')
glm.prob = predict(glm.fit,police[test,],type='response')
glm.pred = rep(0,length(test))
glm.pred[glm.prob >0.5] = 1
table(glm.pred,police[test,]$white)
mean(glm.pred == police[test,]$white)
set.seed(15)
train = sample(1:nrow(police),nrow(police)/2, replace=FALSE)
test = (-train)
police$age = as.numeric(police$age)
meanAge = mean(police$age, na.rm = TRUE)
police$age = replace_na(police$age, meanAge)
police$pov = as.numeric(police$pov)
meanPov = mean(police$pov, na.rm = TRUE)
police$pov = replace_na(police$pov, meanPov)
police$college = scale(police$college)[1,]
police$urate = scale(police$urate)[1,]
police$white = as.numeric(police$raceethnicity == "White")
glm.fit = glm(white~age+gender+armed, data=police,subset=train,family='binomial')
glm.prob = predict(glm.fit,police[test,],type='response')
glm.pred = rep(0,length(test))
glm.pred[glm.prob >0.5] = 1
table(glm.pred,police[test,]$white)
mean(glm.pred == police[test,]$white)
glm.fit = glm(white~college*urate*pov, data=police,subset=train,family='binomial')
glm.prob = predict(glm.fit,police[test,],type='response')
glm.pred = rep(0,length(test))
glm.pred[glm.prob >0.5] = 1
table(glm.pred,police[test,]$white)
mean(glm.pred == police[test,]$white)
regfit = regsubsets(white~age+gender+armed+college+urate+pov, data=police, nvmax=6)
n = dim(police)[1]
regfit.sum = summary(regfit)
p = rowSums(regfit.sum$which) #number of predictors in the model
adjr2 = regfit.sum$adjr2
cp = regfit.sum$cp
rss = regfit.sum$rss
AIC = n*log(rss/n) + 2*(p)
BIC = n*log(rss/n) + (p)*log(n)
barplot(AIC)
barplot(BIC)
plot(adjr2)
plot(cp)
coef(regfit, 4)
glm.fit = glm(white~armed+urate+age, data=police,subset=train,family='binomial')
glm.prob = predict(glm.fit,police[test,],type='response')
glm.pred = rep(0,length(test))
glm.pred[glm.prob >0.5] = 1
table(glm.pred,police[test,]$white)
mean(glm.pred == police[test,]$white)
police = read.csv("~/Classwork/D S 301/DS-301-Final-Project/police_killings.csv", header=TRUE)
library(tidyr)
library(leaps)
police = police[!police$name == "Unknown",]
set.seed(7)
train = sample(1:nrow(police),nrow(police)/2, replace=FALSE)
test = (-train)
police$age = as.numeric(police$age)
meanAge = mean(police$age, na.rm = TRUE)
police$age = replace_na(police$age, meanAge)
police$pov = as.numeric(police$pov)
meanPov = mean(police$pov, na.rm = TRUE)
police$pov = replace_na(police$pov, meanPov)
police$college = scale(police$college)[1,]
police$urate = scale(police$urate)[1,]
police$white = as.numeric(police$raceethnicity == "White")
glm.fit = glm(white~age+gender+armed, data=police,subset=train,family='binomial')
glm.prob = predict(glm.fit,police[test,],type='response')
glm.pred = rep(0,length(test))
glm.pred[glm.prob >0.5] = 1
table(glm.pred,police[test,]$white)
mean(glm.pred == police[test,]$white)
glm.fit = glm(white~college*urate*pov, data=police,subset=train,family='binomial')
glm.prob = predict(glm.fit,police[test,],type='response')
glm.pred = rep(0,length(test))
glm.pred[glm.prob >0.5] = 1
table(glm.pred,police[test,]$white)
mean(glm.pred == police[test,]$white)
regfit = regsubsets(white~age+gender+armed+college+urate+pov, data=police, nvmax=6)
n = dim(police)[1]
regfit.sum = summary(regfit)
p = rowSums(regfit.sum$which) #number of predictors in the model
adjr2 = regfit.sum$adjr2
cp = regfit.sum$cp
rss = regfit.sum$rss
AIC = n*log(rss/n) + 2*(p)
BIC = n*log(rss/n) + (p)*log(n)
barplot(AIC)
barplot(BIC)
plot(adjr2)
plot(cp)
coef(regfit, 5)
coef(regfit, 6)
glm.fit = glm(white~armed+urate+age, data=police,subset=train,family='binomial')
glm.prob = predict(glm.fit,police[test,],type='response')
glm.pred = rep(0,length(test))
glm.pred[glm.prob >0.5] = 1
table(glm.pred,police[test,]$white)
mean(glm.pred == police[test,]$white)
glm.fit = glm(white~armed+age, data=police,subset=train,family='binomial')
glm.prob = predict(glm.fit,police[test,],type='response')
glm.pred = rep(0,length(test))
glm.pred[glm.prob >0.5] = 1
table(glm.pred,police[test,]$white)
mean(glm.pred == police[test,]$white)
regfit = regsubsets(white~age+gender+armed+college*urate*pov, data=police, nvmax=6)
n = dim(police)[1]
regfit.sum = summary(regfit)
p = rowSums(regfit.sum$which) #number of predictors in the model
adjr2 = regfit.sum$adjr2
cp = regfit.sum$cp
rss = regfit.sum$rss
AIC = n*log(rss/n) + 2*(p)
BIC = n*log(rss/n) + (p)*log(n)
barplot(AIC)
barplot(BIC)
plot(adjr2)
plot(cp)
coef(regfit, 6)
coef(regfit, 4)
glm.fit = glm(white~armed+age+college*urate*pov, data=police,subset=train,family='binomial')
glm.prob = predict(glm.fit,police[test,],type='response')
glm.pred = rep(0,length(test))
glm.pred[glm.prob >0.5] = 1
table(glm.pred,police[test,]$white)
mean(glm.pred == police[test,]$white)
install.packages(c("e1071", "neuralnet", "rpart.plot"))
